
optiboot_atmega8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f2  00001e00  00001e00  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .version      00000002  00001ffe  00001ffe  00000246  2**0
                  CONTENTS, READONLY
  2 .data         00000000  00800060  00800060  00000248  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         00000cc0  00000000  00000000  00000248  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000df5  00000000  00000000  00000f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00001cfd  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00001e00 <main>:
    1e00:	11 24       	eor	r1, r1
    1e02:	8f e5       	ldi	r24, 0x5F	; 95
    1e04:	94 e0       	ldi	r25, 0x04	; 4
    1e06:	9e bf       	out	0x3e, r25	; 62
    1e08:	8d bf       	out	0x3d, r24	; 61
    1e0a:	84 b7       	in	r24, 0x34	; 52
    1e0c:	14 be       	out	0x34, r1	; 52
    1e0e:	81 ff       	sbrs	r24, 1
    1e10:	ea d0       	rcall	.+468    	; 0x1fe6 <appStart>
    1e12:	85 e0       	ldi	r24, 0x05	; 5
    1e14:	8e bd       	out	0x2e, r24	; 46
    1e16:	82 e0       	ldi	r24, 0x02	; 2
    1e18:	8b b9       	out	0x0b, r24	; 11
    1e1a:	88 e1       	ldi	r24, 0x18	; 24
    1e1c:	8a b9       	out	0x0a, r24	; 10
    1e1e:	96 e8       	ldi	r25, 0x86	; 134
    1e20:	90 bd       	out	0x20, r25	; 32
    1e22:	90 e1       	ldi	r25, 0x10	; 16
    1e24:	99 b9       	out	0x09, r25	; 9
    1e26:	81 bd       	out	0x21, r24	; 33
    1e28:	8e e0       	ldi	r24, 0x0E	; 14
    1e2a:	81 bd       	out	0x21, r24	; 33
    1e2c:	bd 9a       	sbi	0x17, 5	; 23
    1e2e:	86 e0       	ldi	r24, 0x06	; 6
    1e30:	40 e3       	ldi	r20, 0x30	; 48
    1e32:	5c ef       	ldi	r21, 0xFC	; 252
    1e34:	34 e0       	ldi	r19, 0x04	; 4
    1e36:	20 e2       	ldi	r18, 0x20	; 32
    1e38:	5d bd       	out	0x2d, r21	; 45
    1e3a:	4c bd       	out	0x2c, r20	; 44
    1e3c:	38 bf       	out	0x38, r19	; 56
    1e3e:	08 b6       	in	r0, 0x38	; 56
    1e40:	02 fe       	sbrs	r0, 2
    1e42:	fd cf       	rjmp	.-6      	; 0x1e3e <main+0x3e>
    1e44:	98 b3       	in	r25, 0x18	; 24
    1e46:	92 27       	eor	r25, r18
    1e48:	98 bb       	out	0x18, r25	; 24
    1e4a:	a8 95       	wdr
    1e4c:	81 50       	subi	r24, 0x01	; 1
    1e4e:	a1 f7       	brne	.-24     	; 0x1e38 <main+0x38>
    1e50:	c0 e0       	ldi	r28, 0x00	; 0
    1e52:	d0 e0       	ldi	r29, 0x00	; 0
    1e54:	08 e1       	ldi	r16, 0x18	; 24
    1e56:	38 e0       	ldi	r19, 0x08	; 8
    1e58:	f3 2e       	mov	r15, r19
    1e5a:	ee 24       	eor	r14, r14
    1e5c:	e3 94       	inc	r14
    1e5e:	45 e0       	ldi	r20, 0x05	; 5
    1e60:	b4 2e       	mov	r11, r20
    1e62:	51 e1       	ldi	r21, 0x11	; 17
    1e64:	a5 2e       	mov	r10, r21
    1e66:	13 e0       	ldi	r17, 0x03	; 3
    1e68:	a2 d0       	rcall	.+324    	; 0x1fae <getch>
    1e6a:	81 34       	cpi	r24, 0x41	; 65
    1e6c:	91 f4       	brne	.+36     	; 0x1e92 <main+0x92>
    1e6e:	9f d0       	rcall	.+318    	; 0x1fae <getch>
    1e70:	d8 2e       	mov	r13, r24
    1e72:	a4 d0       	rcall	.+328    	; 0x1fbc <verifySpace>
    1e74:	82 e8       	ldi	r24, 0x82	; 130
    1e76:	d8 12       	cpse	r13, r24
    1e78:	03 c0       	rjmp	.+6      	; 0x1e80 <main+0x80>
    1e7a:	84 e0       	ldi	r24, 0x04	; 4
    1e7c:	94 d0       	rcall	.+296    	; 0x1fa6 <putch>
    1e7e:	90 c0       	rjmp	.+288    	; 0x1fa0 <main+0x1a0>
    1e80:	e1 e8       	ldi	r30, 0x81	; 129
    1e82:	de 12       	cpse	r13, r30
    1e84:	03 c0       	rjmp	.+6      	; 0x1e8c <main+0x8c>
    1e86:	84 e0       	ldi	r24, 0x04	; 4
    1e88:	8e d0       	rcall	.+284    	; 0x1fa6 <putch>
    1e8a:	8a c0       	rjmp	.+276    	; 0x1fa0 <main+0x1a0>
    1e8c:	83 e0       	ldi	r24, 0x03	; 3
    1e8e:	8b d0       	rcall	.+278    	; 0x1fa6 <putch>
    1e90:	87 c0       	rjmp	.+270    	; 0x1fa0 <main+0x1a0>
    1e92:	82 34       	cpi	r24, 0x42	; 66
    1e94:	19 f4       	brne	.+6      	; 0x1e9c <main+0x9c>
    1e96:	84 e1       	ldi	r24, 0x14	; 20
    1e98:	9b d0       	rcall	.+310    	; 0x1fd0 <getNch>
    1e9a:	82 c0       	rjmp	.+260    	; 0x1fa0 <main+0x1a0>
    1e9c:	85 34       	cpi	r24, 0x45	; 69
    1e9e:	19 f4       	brne	.+6      	; 0x1ea6 <main+0xa6>
    1ea0:	85 e0       	ldi	r24, 0x05	; 5
    1ea2:	96 d0       	rcall	.+300    	; 0x1fd0 <getNch>
    1ea4:	7d c0       	rjmp	.+250    	; 0x1fa0 <main+0x1a0>
    1ea6:	85 35       	cpi	r24, 0x55	; 85
    1ea8:	49 f4       	brne	.+18     	; 0x1ebc <main+0xbc>
    1eaa:	81 d0       	rcall	.+258    	; 0x1fae <getch>
    1eac:	c8 2f       	mov	r28, r24
    1eae:	d0 e0       	ldi	r29, 0x00	; 0
    1eb0:	7e d0       	rcall	.+252    	; 0x1fae <getch>
    1eb2:	d8 2b       	or	r29, r24
    1eb4:	cc 0f       	add	r28, r28
    1eb6:	dd 1f       	adc	r29, r29
    1eb8:	81 d0       	rcall	.+258    	; 0x1fbc <verifySpace>
    1eba:	72 c0       	rjmp	.+228    	; 0x1fa0 <main+0x1a0>
    1ebc:	86 35       	cpi	r24, 0x56	; 86
    1ebe:	29 f4       	brne	.+10     	; 0x1eca <main+0xca>
    1ec0:	84 e0       	ldi	r24, 0x04	; 4
    1ec2:	86 d0       	rcall	.+268    	; 0x1fd0 <getNch>
    1ec4:	80 e0       	ldi	r24, 0x00	; 0
    1ec6:	6f d0       	rcall	.+222    	; 0x1fa6 <putch>
    1ec8:	6b c0       	rjmp	.+214    	; 0x1fa0 <main+0x1a0>
    1eca:	84 36       	cpi	r24, 0x64	; 100
    1ecc:	09 f0       	breq	.+2      	; 0x1ed0 <main+0xd0>
    1ece:	3f c0       	rjmp	.+126    	; 0x1f4e <main+0x14e>
    1ed0:	6e d0       	rcall	.+220    	; 0x1fae <getch>
    1ed2:	6d d0       	rcall	.+218    	; 0x1fae <getch>
    1ed4:	98 2e       	mov	r9, r24
    1ed6:	6b d0       	rcall	.+214    	; 0x1fae <getch>
    1ed8:	c1 15       	cp	r28, r1
    1eda:	f8 e1       	ldi	r31, 0x18	; 24
    1edc:	df 07       	cpc	r29, r31
    1ede:	38 f4       	brcc	.+14     	; 0x1eee <main+0xee>
    1ee0:	fe 01       	movw	r30, r28
    1ee2:	17 bf       	out	0x37, r17	; 55
    1ee4:	e8 95       	spm
    1ee6:	c1 2c       	mov	r12, r1
    1ee8:	dd 24       	eor	r13, r13
    1eea:	d3 94       	inc	r13
    1eec:	03 c0       	rjmp	.+6      	; 0x1ef4 <main+0xf4>
    1eee:	c1 2c       	mov	r12, r1
    1ef0:	dd 24       	eor	r13, r13
    1ef2:	d3 94       	inc	r13
    1ef4:	5c d0       	rcall	.+184    	; 0x1fae <getch>
    1ef6:	f6 01       	movw	r30, r12
    1ef8:	81 93       	st	Z+, r24
    1efa:	6f 01       	movw	r12, r30
    1efc:	9e 12       	cpse	r9, r30
    1efe:	fa cf       	rjmp	.-12     	; 0x1ef4 <main+0xf4>
    1f00:	c1 15       	cp	r28, r1
    1f02:	f8 e1       	ldi	r31, 0x18	; 24
    1f04:	df 07       	cpc	r29, r31
    1f06:	18 f0       	brcs	.+6      	; 0x1f0e <main+0x10e>
    1f08:	fe 01       	movw	r30, r28
    1f0a:	17 bf       	out	0x37, r17	; 55
    1f0c:	e8 95       	spm
    1f0e:	56 d0       	rcall	.+172    	; 0x1fbc <verifySpace>
    1f10:	07 b6       	in	r0, 0x37	; 55
    1f12:	00 fc       	sbrc	r0, 0
    1f14:	fd cf       	rjmp	.-6      	; 0x1f10 <main+0x110>
    1f16:	fe 01       	movw	r30, r28
    1f18:	a0 e0       	ldi	r26, 0x00	; 0
    1f1a:	b1 e0       	ldi	r27, 0x01	; 1
    1f1c:	8c 91       	ld	r24, X
    1f1e:	11 96       	adiw	r26, 0x01	; 1
    1f20:	2c 91       	ld	r18, X
    1f22:	11 97       	sbiw	r26, 0x01	; 1
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	92 2b       	or	r25, r18
    1f28:	0c 01       	movw	r0, r24
    1f2a:	e7 be       	out	0x37, r14	; 55
    1f2c:	e8 95       	spm
    1f2e:	11 24       	eor	r1, r1
    1f30:	32 96       	adiw	r30, 0x02	; 2
    1f32:	12 96       	adiw	r26, 0x02	; 2
    1f34:	a0 34       	cpi	r26, 0x40	; 64
    1f36:	81 e0       	ldi	r24, 0x01	; 1
    1f38:	b8 07       	cpc	r27, r24
    1f3a:	81 f7       	brne	.-32     	; 0x1f1c <main+0x11c>
    1f3c:	fe 01       	movw	r30, r28
    1f3e:	b7 be       	out	0x37, r11	; 55
    1f40:	e8 95       	spm
    1f42:	07 b6       	in	r0, 0x37	; 55
    1f44:	00 fc       	sbrc	r0, 0
    1f46:	fd cf       	rjmp	.-6      	; 0x1f42 <main+0x142>
    1f48:	a7 be       	out	0x37, r10	; 55
    1f4a:	e8 95       	spm
    1f4c:	29 c0       	rjmp	.+82     	; 0x1fa0 <main+0x1a0>
    1f4e:	84 37       	cpi	r24, 0x74	; 116
    1f50:	b1 f4       	brne	.+44     	; 0x1f7e <main+0x17e>
    1f52:	2d d0       	rcall	.+90     	; 0x1fae <getch>
    1f54:	2c d0       	rcall	.+88     	; 0x1fae <getch>
    1f56:	98 2e       	mov	r9, r24
    1f58:	2a d0       	rcall	.+84     	; 0x1fae <getch>
    1f5a:	30 d0       	rcall	.+96     	; 0x1fbc <verifySpace>
    1f5c:	89 2c       	mov	r8, r9
    1f5e:	fe 01       	movw	r30, r28
    1f60:	6f 01       	movw	r12, r30
    1f62:	8f ef       	ldi	r24, 0xFF	; 255
    1f64:	c8 1a       	sub	r12, r24
    1f66:	d8 0a       	sbc	r13, r24
    1f68:	84 91       	lpm	r24, Z
    1f6a:	1d d0       	rcall	.+58     	; 0x1fa6 <putch>
    1f6c:	8a 94       	dec	r8
    1f6e:	f6 01       	movw	r30, r12
    1f70:	81 10       	cpse	r8, r1
    1f72:	f6 cf       	rjmp	.-20     	; 0x1f60 <main+0x160>
    1f74:	21 96       	adiw	r28, 0x01	; 1
    1f76:	9a 94       	dec	r9
    1f78:	c9 0d       	add	r28, r9
    1f7a:	d1 1d       	adc	r29, r1
    1f7c:	11 c0       	rjmp	.+34     	; 0x1fa0 <main+0x1a0>
    1f7e:	85 37       	cpi	r24, 0x75	; 117
    1f80:	41 f4       	brne	.+16     	; 0x1f92 <main+0x192>
    1f82:	1c d0       	rcall	.+56     	; 0x1fbc <verifySpace>
    1f84:	8e e1       	ldi	r24, 0x1E	; 30
    1f86:	0f d0       	rcall	.+30     	; 0x1fa6 <putch>
    1f88:	83 e9       	ldi	r24, 0x93	; 147
    1f8a:	0d d0       	rcall	.+26     	; 0x1fa6 <putch>
    1f8c:	87 e0       	ldi	r24, 0x07	; 7
    1f8e:	0b d0       	rcall	.+22     	; 0x1fa6 <putch>
    1f90:	07 c0       	rjmp	.+14     	; 0x1fa0 <main+0x1a0>
    1f92:	81 35       	cpi	r24, 0x51	; 81
    1f94:	21 f4       	brne	.+8      	; 0x1f9e <main+0x19e>
    1f96:	01 bd       	out	0x21, r16	; 33
    1f98:	f1 bc       	out	0x21, r15	; 33
    1f9a:	10 d0       	rcall	.+32     	; 0x1fbc <verifySpace>
    1f9c:	01 c0       	rjmp	.+2      	; 0x1fa0 <main+0x1a0>
    1f9e:	0e d0       	rcall	.+28     	; 0x1fbc <verifySpace>
    1fa0:	80 e1       	ldi	r24, 0x10	; 16
    1fa2:	01 d0       	rcall	.+2      	; 0x1fa6 <putch>
    1fa4:	61 cf       	rjmp	.-318    	; 0x1e68 <main+0x68>

00001fa6 <putch>:
  }
}

void putch(char ch) {
#ifndef SOFT_UART
  while (!(UCSR0A & _BV(UDRE0)));
    1fa6:	5d 9b       	sbis	0x0b, 5	; 11
    1fa8:	fe cf       	rjmp	.-4      	; 0x1fa6 <putch>
  UDR0 = ch;
    1faa:	8c b9       	out	0x0c, r24	; 12
    1fac:	08 95       	ret

00001fae <getch>:
      [uartBit] "I" (UART_RX_BIT)
    :
      "r25"
);
#else
  while(!(UCSR0A & _BV(RXC0)))
    1fae:	5f 9b       	sbis	0x0b, 7	; 11
    1fb0:	fe cf       	rjmp	.-4      	; 0x1fae <getch>
    ;
  if (!(UCSR0A & _BV(FE0))) {
    1fb2:	5c 99       	sbic	0x0b, 4	; 11
    1fb4:	01 c0       	rjmp	.+2      	; 0x1fb8 <getch+0xa>
}
#endif

// Watchdog functions. These are only safe with interrupts turned off.
void watchdogReset() {
  __asm__ __volatile__ (
    1fb6:	a8 95       	wdr
  ch = UDR0;
    1fb8:	8c b1       	in	r24, 0x0c	; 12
}
    1fba:	08 95       	ret

00001fbc <verifySpace>:
  if (getch() != CRC_EOP) {
    1fbc:	f8 df       	rcall	.-16     	; 0x1fae <getch>
    1fbe:	80 32       	cpi	r24, 0x20	; 32
    1fc0:	29 f0       	breq	.+10     	; 0x1fcc <verifySpace+0x10>
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1fc2:	88 e1       	ldi	r24, 0x18	; 24
    1fc4:	81 bd       	out	0x21, r24	; 33
  WDTCSR = x;
    1fc6:	88 e0       	ldi	r24, 0x08	; 8
    1fc8:	81 bd       	out	0x21, r24	; 33
    1fca:	ff cf       	rjmp	.-2      	; 0x1fca <verifySpace+0xe>
  putch(STK_INSYNC);
    1fcc:	84 e1       	ldi	r24, 0x14	; 20
    1fce:	eb cf       	rjmp	.-42     	; 0x1fa6 <putch>

00001fd0 <getNch>:
void getNch(uint8_t count) {
    1fd0:	cf 93       	push	r28
    1fd2:	c8 2f       	mov	r28, r24
  do getch(); while (--count);
    1fd4:	ec df       	rcall	.-40     	; 0x1fae <getch>
    1fd6:	c1 50       	subi	r28, 0x01	; 1
    1fd8:	e9 f7       	brne	.-6      	; 0x1fd4 <getNch+0x4>
}
    1fda:	cf 91       	pop	r28
  verifySpace();
    1fdc:	ef cf       	rjmp	.-34     	; 0x1fbc <verifySpace>

00001fde <watchdogConfig>:
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1fde:	98 e1       	ldi	r25, 0x18	; 24
    1fe0:	91 bd       	out	0x21, r25	; 33
  WDTCSR = x;
    1fe2:	81 bd       	out	0x21, r24	; 33
    1fe4:	08 95       	ret

00001fe6 <appStart>:
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1fe6:	88 e1       	ldi	r24, 0x18	; 24
    1fe8:	81 bd       	out	0x21, r24	; 33
  WDTCSR = x;
    1fea:	11 bc       	out	0x21, r1	; 33
}

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
  __asm__ __volatile__ (
    1fec:	ee 27       	eor	r30, r30
    1fee:	ff 27       	eor	r31, r31
    1ff0:	09 94       	ijmp
