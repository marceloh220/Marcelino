
optiboot_luminet.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000025c  00001d00  00001d00  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .version      00000002  00001efe  00001efe  000002b0  2**0
                  CONTENTS, READONLY
  2 .data         00000000  00800060  00800060  000002b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         00000d5c  00000000  00000000  000002b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e22  00000000  00000000  00001010  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00001e32  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00001d00 <main>:
    1d00:	11 24       	eor	r1, r1
    1d02:	84 b7       	in	r24, 0x34	; 52
    1d04:	14 be       	out	0x34, r1	; 52
    1d06:	81 ff       	sbrs	r24, 1
    1d08:	23 d1       	rcall	.+582    	; 0x1f50 <appStart>
    1d0a:	85 e0       	ldi	r24, 0x05	; 5
    1d0c:	8e bd       	out	0x2e, r24	; 46
    1d0e:	88 e1       	ldi	r24, 0x18	; 24
    1d10:	81 bd       	out	0x21, r24	; 33
    1d12:	8e e0       	ldi	r24, 0x0E	; 14
    1d14:	81 bd       	out	0x21, r24	; 33
    1d16:	d4 9a       	sbi	0x1a, 4	; 26
    1d18:	d2 9a       	sbi	0x1a, 2	; 26
    1d1a:	86 e0       	ldi	r24, 0x06	; 6
    1d1c:	23 ec       	ldi	r18, 0xC3	; 195
    1d1e:	3f ef       	ldi	r19, 0xFF	; 255
    1d20:	91 e0       	ldi	r25, 0x01	; 1
    1d22:	3d bd       	out	0x2d, r19	; 45
    1d24:	2c bd       	out	0x2c, r18	; 44
    1d26:	9b b9       	out	0x0b, r25	; 11
    1d28:	58 9b       	sbis	0x0b, 0	; 11
    1d2a:	fe cf       	rjmp	.-4      	; 0x1d28 <main+0x28>
    1d2c:	cc 9a       	sbi	0x19, 4	; 25
    1d2e:	a8 95       	wdr
    1d30:	81 50       	subi	r24, 0x01	; 1
    1d32:	b9 f7       	brne	.-18     	; 0x1d22 <main+0x22>
    1d34:	c0 e0       	ldi	r28, 0x00	; 0
    1d36:	d0 e0       	ldi	r29, 0x00	; 0
    1d38:	68 e1       	ldi	r22, 0x18	; 24
    1d3a:	f6 2e       	mov	r15, r22
    1d3c:	78 e0       	ldi	r23, 0x08	; 8
    1d3e:	e7 2e       	mov	r14, r23
    1d40:	e3 e0       	ldi	r30, 0x03	; 3
    1d42:	de 2e       	mov	r13, r30
    1d44:	cc 24       	eor	r12, r12
    1d46:	c3 94       	inc	r12
    1d48:	f5 e0       	ldi	r31, 0x05	; 5
    1d4a:	bf 2e       	mov	r11, r31
    1d4c:	af e7       	ldi	r26, 0x7F	; 127
    1d4e:	aa 2e       	mov	r10, r26
    1d50:	be ec       	ldi	r27, 0xCE	; 206
    1d52:	9b 2e       	mov	r9, r27
    1d54:	d5 d0       	rcall	.+426    	; 0x1f00 <getch>
    1d56:	81 34       	cpi	r24, 0x41	; 65
    1d58:	81 f4       	brne	.+32     	; 0x1d7a <main+0x7a>
    1d5a:	d2 d0       	rcall	.+420    	; 0x1f00 <getch>
    1d5c:	18 2f       	mov	r17, r24
    1d5e:	e3 d0       	rcall	.+454    	; 0x1f26 <verifySpace>
    1d60:	12 38       	cpi	r17, 0x82	; 130
    1d62:	19 f4       	brne	.+6      	; 0x1d6a <main+0x6a>
    1d64:	84 e0       	ldi	r24, 0x04	; 4
    1d66:	bd d0       	rcall	.+378    	; 0x1ee2 <putch>
    1d68:	b9 c0       	rjmp	.+370    	; 0x1edc <main+0x1dc>
    1d6a:	11 38       	cpi	r17, 0x81	; 129
    1d6c:	19 f4       	brne	.+6      	; 0x1d74 <main+0x74>
    1d6e:	84 e0       	ldi	r24, 0x04	; 4
    1d70:	b8 d0       	rcall	.+368    	; 0x1ee2 <putch>
    1d72:	b4 c0       	rjmp	.+360    	; 0x1edc <main+0x1dc>
    1d74:	83 e0       	ldi	r24, 0x03	; 3
    1d76:	b5 d0       	rcall	.+362    	; 0x1ee2 <putch>
    1d78:	b1 c0       	rjmp	.+354    	; 0x1edc <main+0x1dc>
    1d7a:	82 34       	cpi	r24, 0x42	; 66
    1d7c:	19 f4       	brne	.+6      	; 0x1d84 <main+0x84>
    1d7e:	84 e1       	ldi	r24, 0x14	; 20
    1d80:	dc d0       	rcall	.+440    	; 0x1f3a <getNch>
    1d82:	ac c0       	rjmp	.+344    	; 0x1edc <main+0x1dc>
    1d84:	85 34       	cpi	r24, 0x45	; 69
    1d86:	19 f4       	brne	.+6      	; 0x1d8e <main+0x8e>
    1d88:	85 e0       	ldi	r24, 0x05	; 5
    1d8a:	d7 d0       	rcall	.+430    	; 0x1f3a <getNch>
    1d8c:	a7 c0       	rjmp	.+334    	; 0x1edc <main+0x1dc>
    1d8e:	85 35       	cpi	r24, 0x55	; 85
    1d90:	49 f4       	brne	.+18     	; 0x1da4 <main+0xa4>
    1d92:	b6 d0       	rcall	.+364    	; 0x1f00 <getch>
    1d94:	c8 2f       	mov	r28, r24
    1d96:	d0 e0       	ldi	r29, 0x00	; 0
    1d98:	b3 d0       	rcall	.+358    	; 0x1f00 <getch>
    1d9a:	d8 2b       	or	r29, r24
    1d9c:	cc 0f       	add	r28, r28
    1d9e:	dd 1f       	adc	r29, r29
    1da0:	c2 d0       	rcall	.+388    	; 0x1f26 <verifySpace>
    1da2:	9c c0       	rjmp	.+312    	; 0x1edc <main+0x1dc>
    1da4:	86 35       	cpi	r24, 0x56	; 86
    1da6:	29 f4       	brne	.+10     	; 0x1db2 <main+0xb2>
    1da8:	84 e0       	ldi	r24, 0x04	; 4
    1daa:	c7 d0       	rcall	.+398    	; 0x1f3a <getNch>
    1dac:	80 e0       	ldi	r24, 0x00	; 0
    1dae:	99 d0       	rcall	.+306    	; 0x1ee2 <putch>
    1db0:	95 c0       	rjmp	.+298    	; 0x1edc <main+0x1dc>
    1db2:	84 36       	cpi	r24, 0x64	; 100
    1db4:	09 f0       	breq	.+2      	; 0x1db8 <main+0xb8>
    1db6:	53 c0       	rjmp	.+166    	; 0x1e5e <main+0x15e>
    1db8:	a3 d0       	rcall	.+326    	; 0x1f00 <getch>
    1dba:	a2 d0       	rcall	.+324    	; 0x1f00 <getch>
    1dbc:	88 2e       	mov	r8, r24
    1dbe:	a0 d0       	rcall	.+320    	; 0x1f00 <getch>
    1dc0:	00 e0       	ldi	r16, 0x00	; 0
    1dc2:	11 e0       	ldi	r17, 0x01	; 1
    1dc4:	9d d0       	rcall	.+314    	; 0x1f00 <getch>
    1dc6:	f8 01       	movw	r30, r16
    1dc8:	81 93       	st	Z+, r24
    1dca:	8f 01       	movw	r16, r30
    1dcc:	8e 12       	cpse	r8, r30
    1dce:	fa cf       	rjmp	.-12     	; 0x1dc4 <main+0xc4>
    1dd0:	fe 01       	movw	r30, r28
    1dd2:	d7 be       	out	0x37, r13	; 55
    1dd4:	e8 95       	spm
    1dd6:	a7 d0       	rcall	.+334    	; 0x1f26 <verifySpace>
    1dd8:	07 b6       	in	r0, 0x37	; 55
    1dda:	00 fc       	sbrc	r0, 0
    1ddc:	fd cf       	rjmp	.-6      	; 0x1dd8 <main+0xd8>
    1dde:	20 97       	sbiw	r28, 0x00	; 0
    1de0:	21 f5       	brne	.+72     	; 0x1e2a <main+0x12a>
    1de2:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_edata+0xa1>
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	98 2f       	mov	r25, r24
    1dea:	88 27       	eor	r24, r24
    1dec:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata+0xa0>
    1df0:	ac 01       	movw	r20, r24
    1df2:	42 2b       	or	r20, r18
    1df4:	9a 01       	movw	r18, r20
    1df6:	30 93 85 01 	sts	0x0185, r19	; 0x800185 <_edata+0x125>
    1dfa:	20 93 84 01 	sts	0x0184, r18	; 0x800184 <_edata+0x124>
    1dfe:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <_edata+0xa9>
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	98 2f       	mov	r25, r24
    1e06:	88 27       	eor	r24, r24
    1e08:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <_edata+0xa8>
    1e0c:	84 2b       	or	r24, r20
    1e0e:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_edata+0x127>
    1e12:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_edata+0x126>
    1e16:	24 50       	subi	r18, 0x04	; 4
    1e18:	31 09       	sbc	r19, r1
    1e1a:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <_edata+0xa8>
    1e1e:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <_edata+0xa9>
    1e22:	a0 92 00 01 	sts	0x0100, r10	; 0x800100 <_edata+0xa0>
    1e26:	90 92 01 01 	sts	0x0101, r9	; 0x800101 <_edata+0xa1>
    1e2a:	fe 01       	movw	r30, r28
    1e2c:	a0 e0       	ldi	r26, 0x00	; 0
    1e2e:	b1 e0       	ldi	r27, 0x01	; 1
    1e30:	8c 91       	ld	r24, X
    1e32:	11 96       	adiw	r26, 0x01	; 1
    1e34:	2c 91       	ld	r18, X
    1e36:	11 97       	sbiw	r26, 0x01	; 1
    1e38:	90 e0       	ldi	r25, 0x00	; 0
    1e3a:	92 2b       	or	r25, r18
    1e3c:	0c 01       	movw	r0, r24
    1e3e:	c7 be       	out	0x37, r12	; 55
    1e40:	e8 95       	spm
    1e42:	11 24       	eor	r1, r1
    1e44:	32 96       	adiw	r30, 0x02	; 2
    1e46:	12 96       	adiw	r26, 0x02	; 2
    1e48:	a0 34       	cpi	r26, 0x40	; 64
    1e4a:	51 e0       	ldi	r21, 0x01	; 1
    1e4c:	b5 07       	cpc	r27, r21
    1e4e:	81 f7       	brne	.-32     	; 0x1e30 <main+0x130>
    1e50:	fe 01       	movw	r30, r28
    1e52:	b7 be       	out	0x37, r11	; 55
    1e54:	e8 95       	spm
    1e56:	07 b6       	in	r0, 0x37	; 55
    1e58:	00 fc       	sbrc	r0, 0
    1e5a:	fd cf       	rjmp	.-6      	; 0x1e56 <main+0x156>
    1e5c:	3f c0       	rjmp	.+126    	; 0x1edc <main+0x1dc>
    1e5e:	84 37       	cpi	r24, 0x74	; 116
    1e60:	61 f5       	brne	.+88     	; 0x1eba <main+0x1ba>
    1e62:	4e d0       	rcall	.+156    	; 0x1f00 <getch>
    1e64:	4d d0       	rcall	.+154    	; 0x1f00 <getch>
    1e66:	88 2e       	mov	r8, r24
    1e68:	4b d0       	rcall	.+150    	; 0x1f00 <getch>
    1e6a:	5d d0       	rcall	.+186    	; 0x1f26 <verifySpace>
    1e6c:	78 2c       	mov	r7, r8
    1e6e:	8e 01       	movw	r16, r28
    1e70:	01 15       	cp	r16, r1
    1e72:	11 05       	cpc	r17, r1
    1e74:	19 f4       	brne	.+6      	; 0x1e7c <main+0x17c>
    1e76:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <_edata+0x124>
    1e7a:	14 c0       	rjmp	.+40     	; 0x1ea4 <main+0x1a4>
    1e7c:	01 30       	cpi	r16, 0x01	; 1
    1e7e:	11 05       	cpc	r17, r1
    1e80:	19 f4       	brne	.+6      	; 0x1e88 <main+0x188>
    1e82:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <_edata+0x125>
    1e86:	0e c0       	rjmp	.+28     	; 0x1ea4 <main+0x1a4>
    1e88:	08 30       	cpi	r16, 0x08	; 8
    1e8a:	11 05       	cpc	r17, r1
    1e8c:	19 f4       	brne	.+6      	; 0x1e94 <main+0x194>
    1e8e:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <_edata+0x126>
    1e92:	08 c0       	rjmp	.+16     	; 0x1ea4 <main+0x1a4>
    1e94:	09 30       	cpi	r16, 0x09	; 9
    1e96:	11 05       	cpc	r17, r1
    1e98:	19 f4       	brne	.+6      	; 0x1ea0 <main+0x1a0>
    1e9a:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <_edata+0x127>
    1e9e:	02 c0       	rjmp	.+4      	; 0x1ea4 <main+0x1a4>
    1ea0:	f8 01       	movw	r30, r16
    1ea2:	84 91       	lpm	r24, Z
    1ea4:	0f 5f       	subi	r16, 0xFF	; 255
    1ea6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea8:	1c d0       	rcall	.+56     	; 0x1ee2 <putch>
    1eaa:	7a 94       	dec	r7
    1eac:	71 10       	cpse	r7, r1
    1eae:	e0 cf       	rjmp	.-64     	; 0x1e70 <main+0x170>
    1eb0:	21 96       	adiw	r28, 0x01	; 1
    1eb2:	8a 94       	dec	r8
    1eb4:	c8 0d       	add	r28, r8
    1eb6:	d1 1d       	adc	r29, r1
    1eb8:	11 c0       	rjmp	.+34     	; 0x1edc <main+0x1dc>
    1eba:	85 37       	cpi	r24, 0x75	; 117
    1ebc:	41 f4       	brne	.+16     	; 0x1ece <main+0x1ce>
    1ebe:	33 d0       	rcall	.+102    	; 0x1f26 <verifySpace>
    1ec0:	8e e1       	ldi	r24, 0x1E	; 30
    1ec2:	0f d0       	rcall	.+30     	; 0x1ee2 <putch>
    1ec4:	83 e9       	ldi	r24, 0x93	; 147
    1ec6:	0d d0       	rcall	.+26     	; 0x1ee2 <putch>
    1ec8:	8c e0       	ldi	r24, 0x0C	; 12
    1eca:	0b d0       	rcall	.+22     	; 0x1ee2 <putch>
    1ecc:	07 c0       	rjmp	.+14     	; 0x1edc <main+0x1dc>
    1ece:	81 35       	cpi	r24, 0x51	; 81
    1ed0:	21 f4       	brne	.+8      	; 0x1eda <main+0x1da>
    1ed2:	f1 bc       	out	0x21, r15	; 33
    1ed4:	e1 bc       	out	0x21, r14	; 33
    1ed6:	27 d0       	rcall	.+78     	; 0x1f26 <verifySpace>
    1ed8:	01 c0       	rjmp	.+2      	; 0x1edc <main+0x1dc>
    1eda:	25 d0       	rcall	.+74     	; 0x1f26 <verifySpace>
    1edc:	80 e1       	ldi	r24, 0x10	; 16
    1ede:	01 d0       	rcall	.+2      	; 0x1ee2 <putch>
    1ee0:	39 cf       	rjmp	.-398    	; 0x1d54 <main+0x54>

00001ee2 <putch>:
void putch(char ch) {
#ifndef SOFT_UART
  while (!(UCSR0A & _BV(UDRE0)));
  UDR0 = ch;
#else
  __asm__ __volatile__ (
    1ee2:	2a e0       	ldi	r18, 0x0A	; 10
    1ee4:	30 e0       	ldi	r19, 0x00	; 0
    1ee6:	80 95       	com	r24
    1ee8:	08 94       	sec
    1eea:	10 f4       	brcc	.+4      	; 0x1ef0 <putch+0xe>
    1eec:	da 98       	cbi	0x1b, 2	; 27
    1eee:	02 c0       	rjmp	.+4      	; 0x1ef4 <putch+0x12>
    1ef0:	da 9a       	sbi	0x1b, 2	; 27
    1ef2:	00 00       	nop
    1ef4:	14 d0       	rcall	.+40     	; 0x1f1e <uartDelay>
    1ef6:	13 d0       	rcall	.+38     	; 0x1f1e <uartDelay>
    1ef8:	86 95       	lsr	r24
    1efa:	2a 95       	dec	r18
    1efc:	b1 f7       	brne	.-20     	; 0x1eea <putch+0x8>
    1efe:	08 95       	ret

00001f00 <getch>:
  LED_PIN |= _BV(LED);
#endif
#endif

#ifdef SOFT_UART
  __asm__ __volatile__ (
    1f00:	29 e0       	ldi	r18, 0x09	; 9
    1f02:	30 e0       	ldi	r19, 0x00	; 0
    1f04:	cb 99       	sbic	0x19, 3	; 25
    1f06:	fe cf       	rjmp	.-4      	; 0x1f04 <getch+0x4>
    1f08:	0a d0       	rcall	.+20     	; 0x1f1e <uartDelay>
    1f0a:	09 d0       	rcall	.+18     	; 0x1f1e <uartDelay>
    1f0c:	08 d0       	rcall	.+16     	; 0x1f1e <uartDelay>
    1f0e:	88 94       	clc
    1f10:	cb 99       	sbic	0x19, 3	; 25
    1f12:	08 94       	sec
    1f14:	2a 95       	dec	r18
    1f16:	11 f0       	breq	.+4      	; 0x1f1c <getch+0x1c>
    1f18:	87 95       	ror	r24
    1f1a:	f7 cf       	rjmp	.-18     	; 0x1f0a <getch+0xa>
  LED_PIN |= _BV(LED);
#endif
#endif

  return ch;
}
    1f1c:	08 95       	ret

00001f1e <uartDelay>:
#if UART_B_VALUE > 255
#error Baud rate too slow for soft UART
#endif

void uartDelay() {
  __asm__ __volatile__ (
    1f1e:	9e e0       	ldi	r25, 0x0E	; 14
    1f20:	9a 95       	dec	r25
    1f22:	f1 f7       	brne	.-4      	; 0x1f20 <uartDelay+0x2>
    1f24:	08 95       	ret

00001f26 <verifySpace>:
  do getch(); while (--count);
  verifySpace();
}

void verifySpace() {
  if (getch() != CRC_EOP) {
    1f26:	ec df       	rcall	.-40     	; 0x1f00 <getch>
    1f28:	80 32       	cpi	r24, 0x20	; 32
    1f2a:	29 f0       	breq	.+10     	; 0x1f36 <verifySpace+0x10>
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1f2c:	88 e1       	ldi	r24, 0x18	; 24
    1f2e:	81 bd       	out	0x21, r24	; 33
  WDTCSR = x;
    1f30:	88 e0       	ldi	r24, 0x08	; 8
    1f32:	81 bd       	out	0x21, r24	; 33
    1f34:	ff cf       	rjmp	.-2      	; 0x1f34 <verifySpace+0xe>
  putch(STK_INSYNC);
    1f36:	84 e1       	ldi	r24, 0x14	; 20
    1f38:	d4 cf       	rjmp	.-88     	; 0x1ee2 <putch>

00001f3a <getNch>:
void getNch(uint8_t count) {
    1f3a:	cf 93       	push	r28
    1f3c:	c8 2f       	mov	r28, r24
  do getch(); while (--count);
    1f3e:	e0 df       	rcall	.-64     	; 0x1f00 <getch>
    1f40:	c1 50       	subi	r28, 0x01	; 1
    1f42:	e9 f7       	brne	.-6      	; 0x1f3e <getNch+0x4>
}
    1f44:	cf 91       	pop	r28
  verifySpace();
    1f46:	ef cf       	rjmp	.-34     	; 0x1f26 <verifySpace>

00001f48 <watchdogConfig>:
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1f48:	98 e1       	ldi	r25, 0x18	; 24
    1f4a:	91 bd       	out	0x21, r25	; 33
  WDTCSR = x;
    1f4c:	81 bd       	out	0x21, r24	; 33
    1f4e:	08 95       	ret

00001f50 <appStart>:
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1f50:	88 e1       	ldi	r24, 0x18	; 24
    1f52:	81 bd       	out	0x21, r24	; 33
  WDTCSR = x;
    1f54:	11 bc       	out	0x21, r1	; 33
}

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
  __asm__ __volatile__ (
    1f56:	e4 e0       	ldi	r30, 0x04	; 4
    1f58:	ff 27       	eor	r31, r31
    1f5a:	09 94       	ijmp
