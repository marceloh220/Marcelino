
optiboot_pro_20mhz.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000268  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000214  00003e00  00003e00  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .version      00000002  00003ffe  00003ffe  00000268  2**0
                  CONTENTS, READONLY
  3 .stab         00000ca8  00000000  00000000  0000026c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e0a  00000000  00000000  00000f14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00001d1e  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00003e00 <main>:
    3e00:	11 24       	eor	r1, r1
    3e02:	84 b7       	in	r24, 0x34	; 52
    3e04:	14 be       	out	0x34, r1	; 52
    3e06:	81 ff       	sbrs	r24, 1
    3e08:	fd d0       	rcall	.+506    	; 0x4004 <appStart>
    3e0a:	85 e0       	ldi	r24, 0x05	; 5
    3e0c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    3e10:	82 e0       	ldi	r24, 0x02	; 2
    3e12:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    3e16:	88 e1       	ldi	r24, 0x18	; 24
    3e18:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3e1c:	96 e0       	ldi	r25, 0x06	; 6
    3e1e:	90 93 c2 00 	sts	0x00C2, r25	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    3e22:	95 e1       	ldi	r25, 0x15	; 21
    3e24:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    3e28:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3e2c:	8e e0       	ldi	r24, 0x0E	; 14
    3e2e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3e32:	25 9a       	sbi	0x04, 5	; 4
    3e34:	86 e0       	ldi	r24, 0x06	; 6
    3e36:	2c e3       	ldi	r18, 0x3C	; 60
    3e38:	3b ef       	ldi	r19, 0xFB	; 251
    3e3a:	91 e0       	ldi	r25, 0x01	; 1
    3e3c:	30 93 85 00 	sts	0x0085, r19	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    3e40:	20 93 84 00 	sts	0x0084, r18	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    3e44:	96 bb       	out	0x16, r25	; 22
    3e46:	b0 9b       	sbis	0x16, 0	; 22
    3e48:	fe cf       	rjmp	.-4      	; 0x3e46 <main+0x46>
    3e4a:	1d 9a       	sbi	0x03, 5	; 3
    3e4c:	a8 95       	wdr
    3e4e:	81 50       	subi	r24, 0x01	; 1
    3e50:	a9 f7       	brne	.-22     	; 0x3e3c <main+0x3c>
    3e52:	c0 e0       	ldi	r28, 0x00	; 0
    3e54:	d0 e0       	ldi	r29, 0x00	; 0
    3e56:	08 e1       	ldi	r16, 0x18	; 24
    3e58:	38 e0       	ldi	r19, 0x08	; 8
    3e5a:	f3 2e       	mov	r15, r19
    3e5c:	ee 24       	eor	r14, r14
    3e5e:	e3 94       	inc	r14
    3e60:	45 e0       	ldi	r20, 0x05	; 5
    3e62:	b4 2e       	mov	r11, r20
    3e64:	51 e1       	ldi	r21, 0x11	; 17
    3e66:	a5 2e       	mov	r10, r21
    3e68:	13 e0       	ldi	r17, 0x03	; 3
    3e6a:	a7 d0       	rcall	.+334    	; 0x3fba <getch>
    3e6c:	81 34       	cpi	r24, 0x41	; 65
    3e6e:	91 f4       	brne	.+36     	; 0x3e94 <main+0x94>
    3e70:	a4 d0       	rcall	.+328    	; 0x3fba <getch>
    3e72:	d8 2e       	mov	r13, r24
    3e74:	ae d0       	rcall	.+348    	; 0x3fd2 <verifySpace>
    3e76:	82 e8       	ldi	r24, 0x82	; 130
    3e78:	d8 12       	cpse	r13, r24
    3e7a:	03 c0       	rjmp	.+6      	; 0x3e82 <main+0x82>
    3e7c:	84 e0       	ldi	r24, 0x04	; 4
    3e7e:	96 d0       	rcall	.+300    	; 0x3fac <putch>
    3e80:	92 c0       	rjmp	.+292    	; 0x3fa6 <main+0x1a6>
    3e82:	e1 e8       	ldi	r30, 0x81	; 129
    3e84:	de 12       	cpse	r13, r30
    3e86:	03 c0       	rjmp	.+6      	; 0x3e8e <main+0x8e>
    3e88:	84 e0       	ldi	r24, 0x04	; 4
    3e8a:	90 d0       	rcall	.+288    	; 0x3fac <putch>
    3e8c:	8c c0       	rjmp	.+280    	; 0x3fa6 <main+0x1a6>
    3e8e:	83 e0       	ldi	r24, 0x03	; 3
    3e90:	8d d0       	rcall	.+282    	; 0x3fac <putch>
    3e92:	89 c0       	rjmp	.+274    	; 0x3fa6 <main+0x1a6>
    3e94:	82 34       	cpi	r24, 0x42	; 66
    3e96:	19 f4       	brne	.+6      	; 0x3e9e <main+0x9e>
    3e98:	84 e1       	ldi	r24, 0x14	; 20
    3e9a:	a7 d0       	rcall	.+334    	; 0x3fea <getNch>
    3e9c:	84 c0       	rjmp	.+264    	; 0x3fa6 <main+0x1a6>
    3e9e:	85 34       	cpi	r24, 0x45	; 69
    3ea0:	19 f4       	brne	.+6      	; 0x3ea8 <main+0xa8>
    3ea2:	85 e0       	ldi	r24, 0x05	; 5
    3ea4:	a2 d0       	rcall	.+324    	; 0x3fea <getNch>
    3ea6:	7f c0       	rjmp	.+254    	; 0x3fa6 <main+0x1a6>
    3ea8:	85 35       	cpi	r24, 0x55	; 85
    3eaa:	49 f4       	brne	.+18     	; 0x3ebe <main+0xbe>
    3eac:	86 d0       	rcall	.+268    	; 0x3fba <getch>
    3eae:	c8 2f       	mov	r28, r24
    3eb0:	d0 e0       	ldi	r29, 0x00	; 0
    3eb2:	83 d0       	rcall	.+262    	; 0x3fba <getch>
    3eb4:	d8 2b       	or	r29, r24
    3eb6:	cc 0f       	add	r28, r28
    3eb8:	dd 1f       	adc	r29, r29
    3eba:	8b d0       	rcall	.+278    	; 0x3fd2 <verifySpace>
    3ebc:	74 c0       	rjmp	.+232    	; 0x3fa6 <main+0x1a6>
    3ebe:	86 35       	cpi	r24, 0x56	; 86
    3ec0:	29 f4       	brne	.+10     	; 0x3ecc <main+0xcc>
    3ec2:	84 e0       	ldi	r24, 0x04	; 4
    3ec4:	92 d0       	rcall	.+292    	; 0x3fea <getNch>
    3ec6:	80 e0       	ldi	r24, 0x00	; 0
    3ec8:	71 d0       	rcall	.+226    	; 0x3fac <putch>
    3eca:	6d c0       	rjmp	.+218    	; 0x3fa6 <main+0x1a6>
    3ecc:	84 36       	cpi	r24, 0x64	; 100
    3ece:	09 f0       	breq	.+2      	; 0x3ed2 <main+0xd2>
    3ed0:	3f c0       	rjmp	.+126    	; 0x3f50 <main+0x150>
    3ed2:	73 d0       	rcall	.+230    	; 0x3fba <getch>
    3ed4:	72 d0       	rcall	.+228    	; 0x3fba <getch>
    3ed6:	98 2e       	mov	r9, r24
    3ed8:	70 d0       	rcall	.+224    	; 0x3fba <getch>
    3eda:	c1 15       	cp	r28, r1
    3edc:	f8 e3       	ldi	r31, 0x38	; 56
    3ede:	df 07       	cpc	r29, r31
    3ee0:	38 f4       	brcc	.+14     	; 0x3ef0 <main+0xf0>
    3ee2:	fe 01       	movw	r30, r28
    3ee4:	17 bf       	out	0x37, r17	; 55
    3ee6:	e8 95       	spm
    3ee8:	c1 2c       	mov	r12, r1
    3eea:	dd 24       	eor	r13, r13
    3eec:	d3 94       	inc	r13
    3eee:	03 c0       	rjmp	.+6      	; 0x3ef6 <main+0xf6>
    3ef0:	c1 2c       	mov	r12, r1
    3ef2:	dd 24       	eor	r13, r13
    3ef4:	d3 94       	inc	r13
    3ef6:	61 d0       	rcall	.+194    	; 0x3fba <getch>
    3ef8:	f6 01       	movw	r30, r12
    3efa:	81 93       	st	Z+, r24
    3efc:	6f 01       	movw	r12, r30
    3efe:	9e 12       	cpse	r9, r30
    3f00:	fa cf       	rjmp	.-12     	; 0x3ef6 <main+0xf6>
    3f02:	c1 15       	cp	r28, r1
    3f04:	f8 e3       	ldi	r31, 0x38	; 56
    3f06:	df 07       	cpc	r29, r31
    3f08:	18 f0       	brcs	.+6      	; 0x3f10 <main+0x110>
    3f0a:	fe 01       	movw	r30, r28
    3f0c:	17 bf       	out	0x37, r17	; 55
    3f0e:	e8 95       	spm
    3f10:	60 d0       	rcall	.+192    	; 0x3fd2 <verifySpace>
    3f12:	07 b6       	in	r0, 0x37	; 55
    3f14:	00 fc       	sbrc	r0, 0
    3f16:	fd cf       	rjmp	.-6      	; 0x3f12 <main+0x112>
    3f18:	fe 01       	movw	r30, r28
    3f1a:	a0 e0       	ldi	r26, 0x00	; 0
    3f1c:	b1 e0       	ldi	r27, 0x01	; 1
    3f1e:	8c 91       	ld	r24, X
    3f20:	11 96       	adiw	r26, 0x01	; 1
    3f22:	2c 91       	ld	r18, X
    3f24:	11 97       	sbiw	r26, 0x01	; 1
    3f26:	90 e0       	ldi	r25, 0x00	; 0
    3f28:	92 2b       	or	r25, r18
    3f2a:	0c 01       	movw	r0, r24
    3f2c:	e7 be       	out	0x37, r14	; 55
    3f2e:	e8 95       	spm
    3f30:	11 24       	eor	r1, r1
    3f32:	32 96       	adiw	r30, 0x02	; 2
    3f34:	12 96       	adiw	r26, 0x02	; 2
    3f36:	a0 38       	cpi	r26, 0x80	; 128
    3f38:	81 e0       	ldi	r24, 0x01	; 1
    3f3a:	b8 07       	cpc	r27, r24
    3f3c:	81 f7       	brne	.-32     	; 0x3f1e <main+0x11e>
    3f3e:	fe 01       	movw	r30, r28
    3f40:	b7 be       	out	0x37, r11	; 55
    3f42:	e8 95       	spm
    3f44:	07 b6       	in	r0, 0x37	; 55
    3f46:	00 fc       	sbrc	r0, 0
    3f48:	fd cf       	rjmp	.-6      	; 0x3f44 <main+0x144>
    3f4a:	a7 be       	out	0x37, r10	; 55
    3f4c:	e8 95       	spm
    3f4e:	2b c0       	rjmp	.+86     	; 0x3fa6 <main+0x1a6>
    3f50:	84 37       	cpi	r24, 0x74	; 116
    3f52:	b1 f4       	brne	.+44     	; 0x3f80 <main+0x180>
    3f54:	32 d0       	rcall	.+100    	; 0x3fba <getch>
    3f56:	31 d0       	rcall	.+98     	; 0x3fba <getch>
    3f58:	98 2e       	mov	r9, r24
    3f5a:	2f d0       	rcall	.+94     	; 0x3fba <getch>
    3f5c:	3a d0       	rcall	.+116    	; 0x3fd2 <verifySpace>
    3f5e:	89 2c       	mov	r8, r9
    3f60:	fe 01       	movw	r30, r28
    3f62:	6f 01       	movw	r12, r30
    3f64:	8f ef       	ldi	r24, 0xFF	; 255
    3f66:	c8 1a       	sub	r12, r24
    3f68:	d8 0a       	sbc	r13, r24
    3f6a:	84 91       	lpm	r24, Z
    3f6c:	1f d0       	rcall	.+62     	; 0x3fac <putch>
    3f6e:	8a 94       	dec	r8
    3f70:	f6 01       	movw	r30, r12
    3f72:	81 10       	cpse	r8, r1
    3f74:	f6 cf       	rjmp	.-20     	; 0x3f62 <main+0x162>
    3f76:	21 96       	adiw	r28, 0x01	; 1
    3f78:	9a 94       	dec	r9
    3f7a:	c9 0d       	add	r28, r9
    3f7c:	d1 1d       	adc	r29, r1
    3f7e:	13 c0       	rjmp	.+38     	; 0x3fa6 <main+0x1a6>
    3f80:	85 37       	cpi	r24, 0x75	; 117
    3f82:	41 f4       	brne	.+16     	; 0x3f94 <main+0x194>
    3f84:	26 d0       	rcall	.+76     	; 0x3fd2 <verifySpace>
    3f86:	8e e1       	ldi	r24, 0x1E	; 30
    3f88:	11 d0       	rcall	.+34     	; 0x3fac <putch>
    3f8a:	84 e9       	ldi	r24, 0x94	; 148
    3f8c:	0f d0       	rcall	.+30     	; 0x3fac <putch>
    3f8e:	86 e0       	ldi	r24, 0x06	; 6
    3f90:	0d d0       	rcall	.+26     	; 0x3fac <putch>
    3f92:	09 c0       	rjmp	.+18     	; 0x3fa6 <main+0x1a6>
    3f94:	81 35       	cpi	r24, 0x51	; 81
    3f96:	31 f4       	brne	.+12     	; 0x3fa4 <main+0x1a4>
    3f98:	00 93 60 00 	sts	0x0060, r16	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3f9c:	f0 92 60 00 	sts	0x0060, r15	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3fa0:	18 d0       	rcall	.+48     	; 0x3fd2 <verifySpace>
    3fa2:	01 c0       	rjmp	.+2      	; 0x3fa6 <main+0x1a6>
    3fa4:	16 d0       	rcall	.+44     	; 0x3fd2 <verifySpace>
    3fa6:	80 e1       	ldi	r24, 0x10	; 16
    3fa8:	01 d0       	rcall	.+2      	; 0x3fac <putch>
    3faa:	5f cf       	rjmp	.-322    	; 0x3e6a <main+0x6a>

00003fac <putch>:
  }
}

void putch(char ch) {
#ifndef SOFT_UART
  while (!(UCSR0A & _BV(UDRE0)));
    3fac:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    3fb0:	95 ff       	sbrs	r25, 5
    3fb2:	fc cf       	rjmp	.-8      	; 0x3fac <putch>
  UDR0 = ch;
    3fb4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    3fb8:	08 95       	ret

00003fba <getch>:
      [uartBit] "I" (UART_RX_BIT)
    :
      "r25"
);
#else
  while(!(UCSR0A & _BV(RXC0)))
    3fba:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    3fbe:	87 ff       	sbrs	r24, 7
    3fc0:	fc cf       	rjmp	.-8      	; 0x3fba <getch>
    ;
  if (!(UCSR0A & _BV(FE0))) {
    3fc2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    3fc6:	84 fd       	sbrc	r24, 4
    3fc8:	01 c0       	rjmp	.+2      	; 0x3fcc <getch+0x12>
}
#endif

// Watchdog functions. These are only safe with interrupts turned off.
void watchdogReset() {
  __asm__ __volatile__ (
    3fca:	a8 95       	wdr
  ch = UDR0;
    3fcc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    3fd0:	08 95       	ret

00003fd2 <verifySpace>:
  if (getch() != CRC_EOP) {
    3fd2:	f3 df       	rcall	.-26     	; 0x3fba <getch>
    3fd4:	80 32       	cpi	r24, 0x20	; 32
    3fd6:	39 f0       	breq	.+14     	; 0x3fe6 <verifySpace+0x14>
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
    3fd8:	88 e1       	ldi	r24, 0x18	; 24
    3fda:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
  WDTCSR = x;
    3fde:	88 e0       	ldi	r24, 0x08	; 8
    3fe0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
  putch(STK_INSYNC);
    3fe4:	ff cf       	rjmp	.-2      	; 0x3fe4 <verifySpace+0x12>
    3fe6:	84 e1       	ldi	r24, 0x14	; 20
    3fe8:	e1 cf       	rjmp	.-62     	; 0x3fac <putch>

00003fea <getNch>:
void getNch(uint8_t count) {
    3fea:	cf 93       	push	r28
  do getch(); while (--count);
    3fec:	c8 2f       	mov	r28, r24
    3fee:	e5 df       	rcall	.-54     	; 0x3fba <getch>
    3ff0:	c1 50       	subi	r28, 0x01	; 1
}
    3ff2:	e9 f7       	brne	.-6      	; 0x3fee <getNch+0x4>
  verifySpace();
    3ff4:	cf 91       	pop	r28
    3ff6:	ed cf       	rjmp	.-38     	; 0x3fd2 <verifySpace>

00003ff8 <watchdogConfig>:
  WDTCSR = _BV(WDCE) | _BV(WDE);
    3ff8:	e0 e6       	ldi	r30, 0x60	; 96
    3ffa:	f0 e0       	ldi	r31, 0x00	; 0
    3ffc:	98 e1       	ldi	r25, 0x18	; 24
    3ffe:	90 83       	st	Z, r25
  WDTCSR = x;
    4000:	80 83       	st	Z, r24
    4002:	08 95       	ret

00004004 <appStart>:
  WDTCSR = _BV(WDCE) | _BV(WDE);
    4004:	e0 e6       	ldi	r30, 0x60	; 96
    4006:	f0 e0       	ldi	r31, 0x00	; 0
    4008:	88 e1       	ldi	r24, 0x18	; 24
    400a:	80 83       	st	Z, r24
  WDTCSR = x;
    400c:	10 82       	st	Z, r1
}

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
  __asm__ __volatile__ (
    400e:	ee 27       	eor	r30, r30
    4010:	ff 27       	eor	r31, r31
    4012:	09 94       	ijmp
