
	The Manual of Serial Module
	
	This module is compatible with:
									Atmega48A/Atmega48PA,
									Atmega88A/Atmega88PA,
									Atmega168A/Atmega168PA,
									Atmega328/Atmega328P (Arduino Uno).

  Can work with other devices in the mega family,
  but without charge that works without some modifications in the code

  Marcelo H Moraes
  marceloh220@hotmail.com
  
  
  The Universal Synchronous and Asynchronous serial Receiver and Transmitter 
  (USART) is a highly flexible serial communication device.
  
  Module Serial is a very useful module with method to offer the
  programmer several easy tools to control the USART of microcontroller.
  
  This module provides...
  
    
  TO Config the Universal Synchronous and Asynchronous serial Receiver and Transmitter (USART)
  
  mode(mode)			//select the mode of operation
  
  Accepted mode are:
  
  ASYNCHRON for Asynchronous Serial Transmitter and Receiver,
  the baud rate must be set to the same value on both devices.
  
  SYNCHRON for Synchronous Serial Transmitter and Receiver,
  the bound rate is determined by the master and the clock synchronism is send by pin XCK (Digital pin 4).
  
  bits(bit)				//select how much bits will be send by USART
  
  Accepted bits are:
  5 to send 5 bits
  6 to send 6 bits
  7 to send 7 bits
  8 to send 8 bits
  9 to send 9 bits
  
  stop(bit)				//select how much stops bits will be send by USART
  
  Accepted bits are:
  1 to send 1 stop bit
  2 to send 2 stop bit
  
  parity(mode)			//Select the patiry send mode
  
  Accepted modes are:
  DISABLE, no parity bit is send
  EVEN, a even parity bit is send
  ODD, a odd parity bit is send
  
  baud(rate)			//select the baud rate of transmitter
  
  In theory a large of values can be passed by the bound rate,
  but in practice that is limited by the error generated by this rates.
  
  The following tables have the values ​​typically used,
  along with the error generated by each value.
  But most serial communication software only provides values ​​where the error is close to 0%.
  
  
		In 8MHz
	BAUD	|	ERROR
			|
	2400	|	0.2%
	4800	|	0.2%
	9600	|	0.2%
	14400	|	-0.8%
	19200	|	0.2%
	28800	|	2.1%
	38400	|	0.2%
	57600	|	-3.5%
	76800	|	-7.0%
	115200	|	8.5%
	230400	|	8.5%
	250000	|	0.0%
	500000	|	0.0%
	
	
		In 16MHz
	BAUD	|	ERROR
			|
	2400	|	-0.1%
	4800	|	0.2%
	9600	|	0.2%
	14400	|	0.6%
	19200	|	0.2%
	28800	|	-0.8%
	38400	|	0.2%
	57600	|	2.1%
	76800	|	0.2%
	115200	|	-3.5%
	230400	|	8.5%
	250000	|	0.0%
	500000	|	0.0%
  
  
  The USART hardware start in ASYNCHRON mode, 8 bits sended, 1 stop bit sended, no parity bit sended.
  And if baund rate is not passed, the default baund rate of 9600 will be selected.
  This caracteristics can be changed any time in application by the configurations methods.
  So in that way, the USART accepts all 30 combinations of the following as valid frame formats:
	 1 start bit
	 5, 6, 7, 8, or 9 data bits
	 no, even or odd parity bit
 	 1 or 2 stop bits
  
  To print a information using the USART hardware can be used the method;
  write(char)				//to print direct char information
  write(string)				//to print a completely string
  write(string,lenght)		//to print a string with the length determined
  
  And print methods can also be used from the Print class:
  print()					//To print anything
  println()					//to print any stuff with a end line

  
  TO read the Universal Synchronous and Asynchronous serial Receiver and Transmitter (USART)
  
  read()					//return a char received
  
	And this is the END.
